@model WebsiteAdmission.Models.Post

@{
    /**/

    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>
<h4>Post</h4>
<hr />
<div class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div id="BodyToolbar"></div>
            <div id="BodyEditor" style="border: 1px solid #ccc;border-top: 0;"></div>
        </div>
    </div>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, htmlAttributes: new { @id = "formCreatePost", @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="form-group">
            <div class="control-label col-md-2"></div>
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Body)
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CoverImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CoverImage, new { htmlAttributes = new { @type = "file", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CoverImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User_UserID, "User_UserID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("User_UserID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.User_UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubCategory_SubCategoryID, "SubCategory_SubCategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SubCategory_SubCategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubCategory_SubCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" id="btn-submit" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    <script src="~/Scripts/VendorJS/ckeditor.js"></script>
    <script>
        DecoupledEditor
            .create(document.querySelector('#BodyEditor'), {
                ckfinder: {
                    uploadUrl: '/Posts/UploadIMG'
                },
            })
            .then(editor => {
                $('#BodyToolbar').html(editor.ui.view.toolbar.element);
            })
            .catch(err => {
                console.error(err.stack);
            });
        $('#BodyEditor').focusout(function () {
            $('#Body').val($(this).html());
            if ($(this).html().trim() != '') {
                $('[data-valmsg-for=Body]').text(null);
            }
        });
        $('#btn-submit').click(function () {
            $('#Body').val($('#BodyEditor').html());
            if ($('#BodyEditor').html().trim() != '') {
                $('[data-valmsg-for=Body]').text(null);
            }
        });
        $(document).ready(function () {
            $.validator.setDefaults({
                ignore: []
            });
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
